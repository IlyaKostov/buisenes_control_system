"""add models task, position, struct_adm

Revision ID: d1d765bf812b
Revises: adc9006420e6
Create Date: 2024-08-30 23:05:43.041101

"""
from typing import Sequence, Union

import sqlalchemy_utils
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd1d765bf812b'
down_revision: Union[str, None] = 'adc9006420e6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('position',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_position'))
    )
    op.create_table('struct_adm',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('path', sqlalchemy_utils.types.ltree.LtreeType(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('manager_id', sa.UUID(), nullable=True),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name=op.f('fk_struct_adm_company_id_company'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['manager_id'], ['user.id'], name=op.f('fk_struct_adm_manager_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_id'], ['struct_adm.id'], name=op.f('fk_struct_adm_parent_id_struct_adm')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_struct_adm'))
    )
    op.create_index('ix_struct_adm_path', 'struct_adm', ['path'], unique=False, postgresql_using='gist')
    op.create_table('task',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('responsible_id', sa.UUID(), nullable=False),
    sa.Column('deadline', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'IN_PROGRESS', 'CLOSED', 'ON_HOLD', name='taskstatus', native_enum=False), nullable=False),
    sa.Column('time_estimate', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], name=op.f('fk_task_author_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['responsible_id'], ['user.id'], name=op.f('fk_task_responsible_id_user'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task'))
    )
    op.create_table('user_position',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('position_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['position_id'], ['position.id'], name=op.f('fk_user_position_position_id_position'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_position_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'user_id', 'position_id', name=op.f('pk_user_position'))
    )
    op.create_table('struct_adm_position',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('struct_adm_id', sa.Integer(), nullable=False),
    sa.Column('position_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['position_id'], ['position.id'], name=op.f('fk_struct_adm_position_position_id_position'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['struct_adm_id'], ['struct_adm.id'], name=op.f('fk_struct_adm_position_struct_adm_id_struct_adm'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'struct_adm_id', 'position_id', name=op.f('pk_struct_adm_position'))
    )
    op.create_table('task_assignees',
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name=op.f('fk_task_assignees_task_id_task')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_task_assignees_user_id_user')),
    sa.PrimaryKeyConstraint('task_id', 'user_id', name=op.f('pk_task_assignees'))
    )
    op.create_table('task_observers',
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name=op.f('fk_task_observers_task_id_task')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_task_observers_user_id_user')),
    sa.PrimaryKeyConstraint('task_id', 'user_id', name=op.f('pk_task_observers'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_observers')
    op.drop_table('task_assignees')
    op.drop_table('struct_adm_position')
    op.drop_table('user_position')
    op.drop_table('task')
    op.drop_index('ix_struct_adm_path', table_name='struct_adm', postgresql_using='gist')
    op.drop_table('struct_adm')
    op.drop_table('position')
    # ### end Alembic commands ###
